#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WebApp API
"""

import requests
import json
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent / "src"))

from bot.db import SessionLocal
from bot.models import Waifu

def test_api_endpoint():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint"""
    base_url = "http://localhost:8000"
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∞–π—Ñ—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    session = SessionLocal()
    try:
        waifu = session.query(Waifu).first()
        if not waifu:
            print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤–∞–π—Ñ—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        waifu_id = waifu.id
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è –≤–∞–π—Ñ—É ID: {waifu_id}")
        
    finally:
        session.close()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint
    try:
        response = requests.get(f"{base_url}/api/waifu/{waifu_id}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print(f"üìã –î–∞–Ω–Ω—ã–µ –≤–∞–π—Ñ—É: {json.dumps(data, indent=2, ensure_ascii=False)}")
        else:
            print(f"‚ùå API endpoint –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python run_api_server.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")

def test_webapp_page():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebApp —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    base_url = "http://localhost:8000"
    
    try:
        response = requests.get(f"{base_url}/")
        
        if response.status_code == 200:
            print("‚úÖ WebApp —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞!")
            print(f"üìÑ –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        else:
            print(f"‚ùå WebApp —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebApp —Å–µ—Ä–≤–µ—Ä—É")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python run_api_server.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ WebApp: {e}")

def test_health_check():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check"""
    base_url = "http://localhost:8000"
    
    try:
        response = requests.get(f"{base_url}/health")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìã –°—Ç–∞—Ç—É—Å: {data}")
        else:
            print(f"‚ùå Health check –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ health check: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebApp API")
    print("=" * 50)
    
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check...")
    test_health_check()
    
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebApp —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    test_webapp_page()
    
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint...")
    test_api_endpoint()
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
