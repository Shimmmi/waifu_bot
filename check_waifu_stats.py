#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤–∞–π—Ñ—É
"""
import os
import sys
import json
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('src')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://username:password@localhost/waifu_bot')

def check_waifu_stats():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤–∞–π—Ñ—É"""
    try:
        engine = create_engine(DATABASE_URL)
        Session = sessionmaker(bind=engine)
        session = Session()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
        query = text("""
            SELECT 
                rarity,
                COUNT(*) as count,
                AVG((dynamic->>'bond')::int) as avg_bond,
                AVG((dynamic->>'loyalty')::int) as avg_loyalty,
                MIN((dynamic->>'bond')::int) as min_bond,
                MAX((dynamic->>'bond')::int) as max_bond,
                MIN((dynamic->>'loyalty')::int) as min_loyalty,
                MAX((dynamic->>'loyalty')::int) as max_loyalty
            FROM waifu 
            WHERE dynamic IS NOT NULL
            GROUP BY rarity
            ORDER BY 
                CASE rarity 
                    WHEN 'Common' THEN 1
                    WHEN 'Uncommon' THEN 2
                    WHEN 'Rare' THEN 3
                    WHEN 'Epic' THEN 4
                    WHEN 'Legendary' THEN 5
                END
        """)
        
        result = session.execute(query)
        rows = result.fetchall()
        
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤–∞–π—Ñ—É:")
        print("=" * 80)
        print(f"{'–†–µ–¥–∫–æ—Å—Ç—å':<12} {'–ö–æ–ª-–≤–æ':<8} {'–õ–æ–≤–∫–æ—Å—Ç—å (bond)':<20} {'–õ–æ—è–ª—å–Ω–æ—Å—Ç—å (loyalty)':<20}")
        print(f"{'':<12} {'':<8} {'–°—Ä–µ–¥–Ω.':<8} {'–ú–∏–Ω-–ú–∞–∫—Å':<10} {'–°—Ä–µ–¥–Ω.':<8} {'–ú–∏–Ω-–ú–∞–∫—Å':<10}")
        print("-" * 80)
        
        for row in rows:
            rarity = row[0]
            count = row[1]
            avg_bond = round(row[2] or 0, 1)
            avg_loyalty = round(row[3] or 0, 1)
            min_bond = row[4] or 0
            max_bond = row[5] or 0
            min_loyalty = row[6] or 0
            max_loyalty = row[7] or 0
            
            print(f"{rarity:<12} {count:<8} {avg_bond:<8} {f'{min_bond}-{max_bond}':<10} {avg_loyalty:<8} {f'{min_loyalty}-{max_loyalty}':<10}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∞–π—Ñ—É —Å bond = 0
        zero_bond_query = text("""
            SELECT COUNT(*) 
            FROM waifu 
            WHERE (dynamic->>'bond')::int = 0 OR dynamic->>'bond' IS NULL
        """)
        
        zero_bond_count = session.execute(zero_bond_query).scalar()
        print(f"\nüîç –í–∞–π—Ñ—É —Å –ª–æ–≤–∫–æ—Å—Ç—å—é = 0: {zero_bond_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∞–π—Ñ—É —Å loyalty > 0
        non_zero_loyalty_query = text("""
            SELECT COUNT(*) 
            FROM waifu 
            WHERE (dynamic->>'loyalty')::int > 0
        """)
        
        non_zero_loyalty_count = session.execute(non_zero_loyalty_query).scalar()
        print(f"üîç –í–∞–π—Ñ—É —Å –ª–æ—è–ª—å–Ω–æ—Å—Ç—å—é > 0: {non_zero_loyalty_count}")
        
        session.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_waifu_stats()
